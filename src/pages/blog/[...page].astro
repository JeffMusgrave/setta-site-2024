---
import Layout from '../../layouts/Layout.astro';
import Section from '../../components/general/sections/Section.astro';
import { getCollection } from 'astro:content';
import type { GetStaticPaths, Page } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { siteNarrowWidth } from '../../styles/constants';
import BlogListTitle from '../../components/pages/blog/BlogListTitle.astro';

export const getStaticPaths = (async ({ paginate }) => {
  const posts = await getCollection('blog');
  const sortedPosts = posts.sort(
    (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
  );
  return paginate(sortedPosts, { pageSize: 10 });
}) satisfies GetStaticPaths;

interface Props {
  page: Page<CollectionEntry<'blog'>>;
}

const { page } = Astro.props;
---

<Layout>
    <title>Engineering Updates | Setta</title>
    <meta name="description" content="Technical guides, implementation insights, and engineering updates from the Setta team" />
    <meta property="og:title" content="Setta Engineering Updates" />
    <meta property="og:description" content="Technical guides, implementation insights, and engineering updates from the Setta team" />

    <BlogListTitle>
      <h1 class="text-white text-4xl md:text-5xl lg:text-6xl mt-32 mb-8">Setta Dev Blog</h1>
      <p class="font-normal mt-4">Focus on Python. Delete the config parsers, YAML, and frontend code.</p>
    </BlogListTitle>
    
  <Section outerClass="relative pt-16 md:pt-32 pb-16 border-b border-setta-700 bg-setta-875" customSiteWidth={siteNarrowWidth}>
    <div class="grid gap-32">
      {page.data.map((post) => (
        <a class="group/blogpost prose dark:prose-invert max-w-none border border-transparent md:hover:border-setta-800 rounded-xl md:p-8 md:-m-8 md:hover:bg-setta-850/50 transition-all" href={`/blog/${post.slug}`}>
          <h2 class="mb-2 group-hover/blogpost:text-blue-500 transition-colors">
              {post.data.title}
          </h2>
          <time datetime={post.data.date.toISOString()} class="text-sm text-setta-400">
            {post.data.date.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
          <p class="mt-2 font-normal">{post.data.description}</p>
          <p class="text-setta-300 group-hover/blogpost:text-blue-500 transition-colors">Read more →</p>
        </a>
      ))}
    </div>

    <nav class="flex items-center justify-between mt-8 pt-8" aria-label="Pagination">
      <div class="flex items-center gap-2">
        {page.url.prev && (
          <a href={page.url.prev} class="px-3 py-1 rounded-md text-sm font-medium text-blue-400 hover:text-blue-300 hover:bg-setta-800">
            ← Previous
          </a>
        )}
      </div>
      
      <div class="flex items-center gap-1">
        {Array.from({ length: page.lastPage }, (_, i) => i + 1).map((num) => (
          <a
            href={num === 1 ? `/blog` : `/blog/${num}`}
            class:list={[
              "px-3 py-1 rounded-full text-sm font-medium transition-colors hover:bg-blue-700",
              page.currentPage === num 
                ? "bg-setta-700 text-white " 
                : "text-setta-400"
            ]}
          >
            {num}
          </a>
        ))}
      </div>

      <div class="flex items-center gap-2">
        {page.url.next && (
          <a href={page.url.next} class="px-3 py-1 rounded-md text-sm font-medium text-blue-400 hover:text-blue-300 hover:bg-setta-800">
            Next →
          </a>
        )}
      </div>
    </nav>
  </Section>
</Layout>